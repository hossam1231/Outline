{"ast":null,"code":"var _jsxFileName = \"/Users/hossamsulleman/Documents/GitHub/Outline/my-app/App.js\";\nimport React from \"react\";\nimport { Text, Link, HStack, Center, Heading, Switch, useColorMode, NativeBaseProvider, extendTheme, VStack, Code } from \"native-base\";\nimport NativeBaseIcon from \"./components/NativeBaseIcon\";\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: \"dark\"\n};\nexport var theme = extendTheme({\n  config: config\n});\nexport default function App() {\n  return React.createElement(NativeBaseProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Center, {\n    _dark: {\n      bg: \"blueGray.900\"\n    },\n    _light: {\n      bg: \"blueGray.50\"\n    },\n    px: 4,\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(VStack, {\n    space: 5,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(NativeBaseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), React.createElement(Heading, {\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Welcome to NativeBase\"), React.createElement(HStack, {\n    space: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Edit\"), React.createElement(Code, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"App.js\"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"and save to reload.\")), React.createElement(Link, {\n    href: \"https://docs.nativebase.io\",\n    isExternal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    color: \"primary.500\",\n    underline: true,\n    fontSize: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Learn NativeBase\")), React.createElement(ToggleDarkMode, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction ToggleDarkMode() {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode,\n      toggleColorMode = _useColorMode.toggleColorMode;\n\n  return React.createElement(HStack, {\n    space: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Dark\"), React.createElement(Switch, {\n    isChecked: colorMode === \"light\" ? true : false,\n    onToggle: toggleColorMode,\n    \"aria-label\": colorMode === \"light\" ? \"switch to dark mode\" : \"switch to light mode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Light\"));\n}","map":{"version":3,"sources":["/Users/hossamsulleman/Documents/GitHub/Outline/my-app/App.js"],"names":["React","Text","Link","HStack","Center","Heading","Switch","useColorMode","NativeBaseProvider","extendTheme","VStack","Code","NativeBaseIcon","config","useSystemColorMode","initialColorMode","theme","App","bg","ToggleDarkMode","colorMode","toggleColorMode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,YAPF,EAQEC,kBARF,EASEC,WATF,EAUEC,MAVF,EAWEC,IAXF,QAYO,aAZP;AAaA,OAAOC,cAAP;AAGA,IAAMC,MAAM,GAAG;AACbC,EAAAA,kBAAkB,EAAE,KADP;AAEbC,EAAAA,gBAAgB,EAAE;AAFL,CAAf;AAMA,OAAO,IAAMC,KAAK,GAAGP,WAAW,CAAC;AAAEI,EAAAA,MAAM,EAANA;AAAF,CAAD,CAAzB;AAEP,eAAe,SAASI,GAAT,GAAe;AAC5B,SACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,EAAE,EAAE;AAAN,KADT;AAEE,IAAA,MAAM,EAAE;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAFV;AAGE,IAAA,EAAE,EAAE,CAHN;AAIE,IAAA,IAAI,EAAE,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAkB,IAAA,UAAU,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAkB,IAAA,UAAU,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,CAHF,EAQE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,4BAAX;AAAwC,IAAA,UAAU,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,aAAZ;AAA0B,IAAA,SAAS,MAAnC;AAAoC,IAAA,QAAQ,EAAE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CARF,EAaE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CANF,CADF,CADF;AA0BD;;AAGD,SAASC,cAAT,GAA0B;AACxB,sBAAuCZ,YAAY,EAAnD;AAAA,MAAQa,SAAR,iBAAQA,SAAR;AAAA,MAAmBC,eAAnB,iBAAmBA,eAAnB;;AACA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,CAAf;AAAkB,IAAA,UAAU,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAED,SAAS,KAAK,OAAd,GAAwB,IAAxB,GAA+B,KAD5C;AAEE,IAAA,QAAQ,EAAEC,eAFZ;AAGE,kBACED,SAAS,KAAK,OAAd,GAAwB,qBAAxB,GAAgD,sBAJpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CADF;AAaD","sourcesContent":["import React from \"react\";\nimport {\n  Text,\n  Link,\n  HStack,\n  Center,\n  Heading,\n  Switch,\n  useColorMode,\n  NativeBaseProvider,\n  extendTheme,\n  VStack,\n  Code,\n} from \"native-base\";\nimport NativeBaseIcon from \"./components/NativeBaseIcon\";\n\n// Define the config\nconst config = {\n  useSystemColorMode: false,\n  initialColorMode: \"dark\",\n};\n\n// extend the theme\nexport const theme = extendTheme({ config });\n\nexport default function App() {\n  return (\n    <NativeBaseProvider>\n      <Center\n        _dark={{ bg: \"blueGray.900\" }}\n        _light={{ bg: \"blueGray.50\" }}\n        px={4}\n        flex={1}\n      >\n        <VStack space={5} alignItems=\"center\">\n          <NativeBaseIcon />\n          <Heading size=\"lg\">Welcome to NativeBase</Heading>\n          <HStack space={2} alignItems=\"center\">\n            <Text>Edit</Text>\n            <Code>App.js</Code>\n            <Text>and save to reload.</Text>\n          </HStack>\n          <Link href=\"https://docs.nativebase.io\" isExternal>\n            <Text color=\"primary.500\" underline fontSize={\"xl\"}>\n              Learn NativeBase\n            </Text>\n          </Link>\n          <ToggleDarkMode />\n        </VStack>\n      </Center>\n    </NativeBaseProvider>\n  );\n}\n\n// Color Switch Component\nfunction ToggleDarkMode() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <HStack space={2} alignItems=\"center\">\n      <Text>Dark</Text>\n      <Switch\n        isChecked={colorMode === \"light\" ? true : false}\n        onToggle={toggleColorMode}\n        aria-label={\n          colorMode === \"light\" ? \"switch to dark mode\" : \"switch to light mode\"\n        }\n      />\n      <Text>Light</Text>\n    </HStack>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}